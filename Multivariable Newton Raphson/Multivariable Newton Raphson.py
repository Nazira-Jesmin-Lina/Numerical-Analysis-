# -*- coding: utf-8 -*-
"""Lab7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16ghoVEfWLEdd4O3dHdSM9juJ3LCyWCEM
"""

import numpy as np

def f(x, y, z):
    eq1 = x**2 - 2*x + y**2 - z + 1
    eq2 = x*y**2 - x - 3*y + y*z + 2
    eq3 = x*z**2 - 3*z + y*z**2 + x*y
    return np.array([eq1, eq2, eq3])

def J_mat(x, y, z):
    dfdx = 2*x - 2
    dfdy = 2*y
    dfdz = -1
    dgdx = y**2 - 1
    dgdy = 2*x*y - 3 + z
    dgdz = y
    dhdx = z**2 + y
    dhdy = z**2+x
    dhdz =  2*x*z-3+2*y*z

    J = np.array([
        [dfdx, dfdy, dfdz],
        [dgdx, dgdy, dgdz],
        [dhdx, dhdy, dhdz]
    ])

    return J



tolerance=1e-6
x0 =x= np.array([1.0, 2.0, 3.0])
iter = 10000


for i in range(iter):
    qq=0
    J_mat_INV=np.linalg.inv(J_mat(x[0],x[1],x[2]))
    flag=1
    tmp= np.dot( J_mat_INV,f(x[0],x[1],x[2]))
    print(f" iter: {i}   | x: {x[0]} | y: {x[1]} | z:{x[2]} | ")
    x=x-tmp
    s=f(1,2,3)
    J_mat_INV=0
    flag=flag+1
    if np.allclose(f(x[0],x[1],x[2]),
                    np.array([0, 0, 0]),
                    atol=tolerance):
       c=0
       print(f"\nThe final root is: {x[0],x[1],x[2]}")
       break