# -*- coding: utf-8 -*-
"""Lab6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S5CD5j8VTXJXe8tDOnRagNRpp-Y5Jt8_
"""

import numpy as np
import matplotlib.pyplot as plt


def df(x):
    return 3*x**2+3

def fx(x):
    return  x**3 +3*x

def forward_def(x,h):
    return (fx(x+h)-fx(x))/h

def backward_def(x,h):
    return (fx(x)-fx(x-h))/h

def central_def(x,h):
    return (fx(x+h)-fx(x-h))/(2*h)


def forward_apprx_error(x,h):
    return (h/2)* (df(x+h))

def back_apprx_error(x,h):
    return (h/2)* (df(x-h))

def central_apprx_error(x,h):
    return (h**2/6)* (df(x))


x=input("Enter the value of x: ")
x=float(x)
real_derivative=df(x)
h=10.0
for_apprx=[]
back_apprx=[]
centr_apprx=[]
h_line=[]
real=[]
true_for_arr=[]
true_back_arr=[]
true_cent_arr=[]
rel_tru_for_err_arr=[]
rel_back_for_err_arr=[]
rel_cent_for_err_arr=[]

for_appr_err_arr=[]
back_appr_err_arr=[]
cent_appr_err_arr=[]

for_prev=0
back_prev=0
cent_prev=0

rel_app_for_arr=[]
rel_app_back_arr=[]
rel_app_cent_arr=[]


while h>= 0.01:
    fr_def=forward_def(x,h)
    trueError_For=real_derivative-fr_def
    relError_for=abs(trueError_For*100)/real_derivative
    for_appx_v=fr_def-for_prev
    rel_apprx_v_for=abs(for_appx_v*100)/fr_def
    for_prev=fr_def




    bck_def=backward_def(x,h)
    trueError_bck=real_derivative-bck_def
    relError_bck=abs(trueError_bck*100)/real_derivative
    back_appx_v=bck_def-back_prev
    rel_apprx_v_back=abs(back_appx_v*100)/bck_def
    back_prev=bck_def


    cent_def=central_def(x,h)
    trueError_cent=real_derivative-cent_def
    relError_cent=abs(trueError_cent*100)/real_derivative
    cent_appx_v=cent_def-cent_prev
    rel_apprx_v_cent=abs(cent_appx_v*100)/cent_def
    cent_prev=cent_def


    print(f" h: {h}   |  f'(x):  {real_derivative}  |Forward difference:{fr_def}      | Backward difference:{bck_def}   |  Central difference: {cent_def}")
    for_apprx.append(fr_def)
    back_apprx.append(bck_def)
    centr_apprx.append(cent_def)
    h_line.append(h)
    real.append(real_derivative)
    true_for_arr.append(trueError_For)
    true_back_arr.append(trueError_bck)
    true_cent_arr.append(trueError_cent)

    rel_tru_for_err_arr.append(relError_for)
    rel_back_for_err_arr.append(relError_bck)
    rel_cent_for_err_arr.append(relError_cent)

    for_appr_err_arr.append(for_appx_v)
    back_appr_err_arr.append(back_appx_v)
    cent_appr_err_arr.append(cent_appx_v)

    rel_app_for_arr.append(rel_apprx_v_for)
    rel_app_back_arr.append(rel_apprx_v_back)
    rel_app_cent_arr.append(rel_apprx_v_cent)

    h=h-0.01





plt.plot(h_line,for_apprx,label="Forward differnece")
plt.plot(h_line,back_apprx,label="Backward differnece")
plt.xlabel('h')
plt.ylabel('Difference')
plt.plot(h_line,centr_apprx,label="Central differnece")
plt.plot(h_line,real,label="real")
plt.title('h vs. Difference')
plt.show()


plt.plot(h_line,true_for_arr,label="Forward differnece")
plt.plot(h_line,true_back_arr,label="Backward differnece")
plt.xlabel('h')
plt.ylabel('True Error')
plt.plot(h_line,true_cent_arr,label="Central differnece")
plt.title('h vs. True Error')
plt.show()



plt.plot(h_line,rel_tru_for_err_arr,label="Forward differnece")
plt.plot(h_line,rel_back_for_err_arr,label="Backward differnece")
plt.xlabel('h')
plt.ylabel('Relative True Error')
plt.plot(h_line,rel_cent_for_err_arr,label="Central differnece")
plt.xlabel('h')
plt.ylabel('Relative True Error')
plt.title('h vs. Relative True Error')
plt.show()



plt.plot(h_line,for_appr_err_arr,label="Forward differnece")
plt.plot(h_line,back_appr_err_arr,label="Backward differnece")
plt.xlabel('h')
plt.ylabel(' Approximation Error')
plt.plot(h_line,cent_appr_err_arr,label="Central differnece")
plt.title('h vs. Approximation Error')
plt.grid()
plt.show()



plt.plot(h_line,rel_app_for_arr,label="Forward differnece")
plt.plot(h_line,rel_app_back_arr,label="Backward differnece")
plt.xlabel('h')
plt.ylabel('Relative Approximation Error')
plt.plot(h_line,rel_app_cent_arr,label="Central differnece")
plt.title('h vs. Relative Approximation Error')
plt.legend()
plt.grid()
plt.show()